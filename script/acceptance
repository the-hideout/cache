#!/bin/bash

# COLORS
OFF='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'

set -e # Prevent any kind of script failures

# start the docker compose stack
make run

DEV_AUTH_HEADER="Authorization: Basic ZGV2OmRldg=="
ITS_UP="Listening and serving HTTP"
HTTP_PORT="443"

# initialize counter
counter=0

echo -e "${BLUE}waiting for the cache server...${OFF}"

# wait for the server to start by grep-ing the logs for the ITS_UP string
while ! docker compose logs cache | grep "$ITS_UP"; do
  sleep 1
  # increment counter
  counter=$((counter+1))
  # if counter is 120, exit the loop
  if [ $counter -eq 120 ]; then
    echo "timeout reached - cache server did not start"
    exit 1
  fi
done

echo -e "${GREEN}cache server is up! starting acceptance tests${OFF}\n"

###### acceptance tests ######

SUCCESS="true"

response=$(curl --insecure --location --request GET "https://localhost:${HTTP_PORT}/api/health" --header "$DEV_AUTH_HEADER" -w "OK%{http_code}" -s)
status_code=$(echo "$response" | grep -oP 'OK\K[0-9]+')

if [[ $status_code -eq 200 ]]; then
  echo -e "✅ ${BLUE}/api/health${OFF} ${GREEN}passed${OFF}"
else
  SUCCESS="false"
  echo -e "❌ ${BLUE}/api/health${OFF} ${RED}failed${OFF}"
fi

###### acceptance tests results ######

if [[ $SUCCESS == "true" ]]; then
  echo -e "✅ ${GREEN}all acceptance tests passed${OFF}"
  exit 0
else
  echo -e "${RED}acceptance tests failed${OFF}"
  exit 1
fi
